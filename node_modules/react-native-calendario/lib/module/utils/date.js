import moment from 'moment';
export function addDays(date, days) {
  const result = new Date(date);
  result.setDate(result.getDate() + days);
  return result;
}
export function isValidDate(date) {
  return Object.prototype.toString.call(date) === '[object Date]' && !isNaN(date.getTime());
}
export function isSameDate(one, other) {
  return one.getDate() === other.getDate() && one.getMonth() === other.getMonth() && one.getFullYear() === other.getFullYear();
}
export function getMonthIndex(firstMonth, date, months, numberOfMonths) {
  const _firstMonth = moment(firstMonth);
  const lastMonth = _firstMonth.clone().add(numberOfMonths, 'months');
  if (date >= _firstMonth.toDate() && date <= lastMonth.endOf('month').toDate()) {
    const monthIndex = moment(date).diff(_firstMonth, 'months');
    if (monthIndex >= 0 && monthIndex <= months.length) {
      return monthIndex;
    }
  }
  return null;
}
//# sourceMappingURL=date.js.map